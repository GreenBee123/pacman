#include"stdafx.h"
#pragma once

#include<list>

#define MAPLENTH 19//地图大小
#define P_ROW 10//我方位置坐标
#define P_ARRAY 9
#define E_ROW 8//敌方位置坐标
#define E_ARRAY 9

using std::list;

//抽象类GMap
class GMap
{
protected:
	static int LD;//障碍物尺寸
	static int PD;//豆子的半径
	void InitOP();//敌我双方出现的位置没有豆子的出现
	bool mapData[MAPLENTH][MAPLENTH];//障碍物逻辑地图点阵
	bool peaMapData[MAPLENTH][MAPLENTH];//豆子逻辑地图点阵
	COLORREF color;//地图中墙的颜色
public:
	void DrawMap(HDC &hdc);//绘制地图
	void DrawPeas(HDC &hdc);//绘制豆子
	virtual ~GMap();
	GMap() 
	{
		if (GetAsyncKeyState('B') & 0 * 8000)
		{
			MessageBoxA(NULL, "你无意中发现了秘籍", "", MB_OK);
			for (int i = 0; i < MAPLENTH; i++)
			{
				for (int j = 0; j < MAPLENTH; j++)
				{
					peaMapData[i][j] = false;
				}
			}
		}
	}
	friend class GObject;//允许物体类使用直线的起点和终点信息做检测碰撞
	friend class PacMan;//允许大嘴访问豆子地图
};

//第一关
class Stage_1 :public GMap
{
private:
	bool static initData[MAPLENTH][MAPLENTH];//地图数据
public:
	Stage_1();
};

//第二关
class Stage_2 :public GMap
{
private:
	bool static initData[MAPLENTH][MAPLENTH];//地图数据
public:
	Stage_2();
};

//第三关
class Stage_3 :public GMap
{
private:
	bool static initData[MAPLENTH][MAPLENTH];//地图数据
public:
	Stage_3();
};